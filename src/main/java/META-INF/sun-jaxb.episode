<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<bindings xmlns="http://java.sun.com/xml/ns/jaxb" if-exists="true" version="2.1">
  <!--

This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
Any modifications to this file will be lost upon recompilation of the source schema. 
Generated on: 2021.11.26 at 02:58:11 PM IST 

  -->
  <bindings xmlns:tns="http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/" if-exists="true" scd="x-schema::tns">
    <schemaBindings map="false">
      <package name="com.sahil.iLON.toggle"/>
    </schemaBindings>
    <bindings if-exists="true" scd="~tns:MBS_Device_Cfg">
      <class ref="MBSDeviceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MOD_Device_Cfg">
      <class ref="MODDeviceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_ProxyData_InvokeResponse">
      <class ref="LONDeviceProxyDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_RepeatingData_InvokeResponse">
      <class ref="LONDeviceRepeatingDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_PPNBlacklist_Invoke">
      <class ref="LONNetworkPPNBlacklistInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_ScanCommand_Invoke">
      <class ref="LONNetworkScanCommandInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_Cfg">
      <class ref="LONDeviceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_Cfg">
      <class ref="LONNetworkCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_Ref">
      <class ref="DpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgStruct">
      <class ref="TemplateManagerCfgStruct"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgBitfield">
      <class ref="TemplateManagerCfgBitfield"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgScalar">
      <class ref="TemplateManagerCfgScalar"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_FPT_Cfg">
      <class ref="TemplateManagerFPTCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_ENUM_Cfg">
      <class ref="TemplateManagerENUMCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTtypeTranslator_Rule_Cfg">
      <class ref="UFPTtypeTranslatorRuleCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_Cfg">
      <class ref="UFPTschedulerCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTcalendar_Cfg">
      <class ref="UFPTcalendarCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_Data">
      <class ref="UFPTalarmNotifierData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_Input_DpRef">
      <class ref="UFPTalarmNotifierInputDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_Cfg">
      <class ref="UFPTalarmNotifierCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_Variant">
      <class ref="EVariant"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_Fault">
      <class ref="EFault"/>
    </bindings>
    <bindings if-exists="true" scd="tns:messageProperties">
      <class ref="MessageProperties"/>
    </bindings>
    <bindings if-exists="true" scd="tns:List">
      <class ref="List"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_xSelect">
      <class ref="EXSelect"/>
    </bindings>
    <bindings if-exists="true" scd="tns:ListResponse">
      <class ref="ListResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_Coll">
      <class ref="ItemColl"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Get">
      <class ref="Get"/>
    </bindings>
    <bindings if-exists="true" scd="tns:GetResponse">
      <class ref="GetResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_CfgColl">
      <class ref="ItemCfgColl"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Set">
      <class ref="Set"/>
    </bindings>
    <bindings if-exists="true" scd="tns:SetResponse">
      <class ref="SetResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Delete">
      <class ref="Delete"/>
    </bindings>
    <bindings if-exists="true" scd="tns:DeleteResponse">
      <class ref="DeleteResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Read">
      <class ref="Read"/>
    </bindings>
    <bindings if-exists="true" scd="tns:ReadResponse">
      <class ref="ReadResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_DataColl">
      <class ref="ItemDataColl"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Write">
      <class ref="Write"/>
    </bindings>
    <bindings if-exists="true" scd="tns:WriteResponse">
      <class ref="WriteResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:Clear">
      <class ref="Clear"/>
    </bindings>
    <bindings if-exists="true" scd="tns:ClearResponse">
      <class ref="ClearResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:InvokeCmd">
      <class ref="InvokeCmd"/>
    </bindings>
    <bindings if-exists="true" scd="tns:InvokeCmdResponse">
      <class ref="InvokeCmdResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item">
      <class ref="Item"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_Cfg">
      <class ref="ItemCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_Data">
      <class ref="ItemData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Item_Service">
      <class ref="ItemService"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_DpRef">
      <class ref="EDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_LonString">
      <class ref="ELonString"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_UniqueKey">
      <class ref="EUniqueKey"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_Path">
      <class ref="EPath"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_Unit">
      <class ref="EUnit"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_InterfaceOptions">
      <class ref="EInterfaceOptions"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:E_Dummy">
      <class ref="EDummy"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Network_Cfg">
      <class ref="NetworkCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Channel_Cfg">
      <class ref="ChannelCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Device_Cfg">
      <class ref="DeviceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Fb_Cfg">
      <class ref="FbCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_Cfg_Base">
      <class ref="DpCfgBase"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_Cfg">
      <class ref="DpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_CfgValueDef">
      <class ref="DpCfgValueDef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Fb_Data">
      <class ref="FbData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_Data">
      <class ref="DpData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_ResetPrio_Invoke">
      <class ref="DpResetPrioInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FPM_Cfg">
      <class ref="FPMCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTanalogFunctionBlock_Cfg">
      <class ref="UFPTanalogFunctionBlockCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTanalogFunctionBlock_DpRef">
      <class ref="UFPTanalogFunctionBlockDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmGenerator_Cfg">
      <class ref="UFPTalarmGeneratorCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_DpRef">
      <class ref="UFPTalarmNotifierDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_CfgAlarm">
      <class ref="UFPTalarmNotifierCfgAlarm"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_CfgAlarmDestination">
      <class ref="UFPTalarmNotifierCfgAlarmDestination"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_Meta_Data">
      <class ref="UFPTalarmNotifierMetaData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTalarmNotifier_ClearResponse">
      <class ref="UFPTalarmNotifierClearResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTcalendar_CfgESDate">
      <class ref="UFPTcalendarCfgESDate"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTcalendar_Data">
      <class ref="UFPTcalendarData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdataLogger_Cfg">
      <class ref="UFPTdataLoggerCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdataLogger_DpRef">
      <class ref="UFPTdataLoggerDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdataLogger_Data">
      <class ref="UFPTdataLoggerData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdataLogger_Meta_Data">
      <class ref="UFPTdataLoggerMetaData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdataLogger_ClearResponse">
      <class ref="UFPTdataLoggerClearResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdigitalInput_Cfg">
      <class ref="UFPTdigitalInputCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTdigitalOutput_Cfg">
      <class ref="UFPTdigitalOutputCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTnodeObject_Cfg">
      <class ref="UFPTnodeObjectCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTpulseCounter_Cfg">
      <class ref="UFPTpulseCounterCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTrealTimeClock_Cfg">
      <class ref="UFPTrealTimeClockCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTrealTimeClock_Data">
      <class ref="UFPTrealTimeClockData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTrealTimeClock_Data_DpRef">
      <class ref="UFPTrealTimeClockDataDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_DpRef">
      <class ref="UFPTschedulerDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_BaseTime_DpRef">
      <class ref="UFPTschedulerBaseTimeDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_CfgEffectivePeriod">
      <class ref="UFPTschedulerCfgEffectivePeriod"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_CfgEvent">
      <class ref="UFPTschedulerCfgEvent"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_Data">
      <class ref="UFPTschedulerData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_Calendar_Meta_Data">
      <class ref="UFPTschedulerCalendarMetaData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_Calendar_Request_Data">
      <class ref="UFPTschedulerCalendarRequestData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_RealTimeClock_Meta_Data">
      <class ref="UFPTschedulerRealTimeClockMetaData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_RealTimeClock_Request_Data">
      <class ref="UFPTschedulerRealTimeClockRequestData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_Meta_Data">
      <class ref="UFPTschedulerMetaData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_ListSchedules_Invoke">
      <class ref="UFPTschedulerListSchedulesInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTscheduler_ListSchedules_InvokeResponse">
      <class ref="UFPTschedulerListSchedulesInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTtypeTranslator_Cfg">
      <class ref="UFPTtypeTranslatorCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:UFPTtypeTranslator_DpRef">
      <class ref="UFPTtypeTranslatorDpRef"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FileSystem_Cfg">
      <class ref="FileSystemCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FileSystem_Data">
      <class ref="FileSystemData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_Surrogate_Cfg">
      <class ref="TemplateManagerSurrogateCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_Cfg">
      <class ref="TemplateManagerCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_FILE_Cfg">
      <class ref="TemplateManagerFILECfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_NVT_Cfg">
      <class ref="TemplateManagerNVTCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CPT_Cfg">
      <class ref="TemplateManagerCPTCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgEnum">
      <class ref="TemplateManagerCfgEnum"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgFloat">
      <class ref="TemplateManagerCfgFloat"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_CfgFormatString">
      <class ref="TemplateManagerCfgFormatString"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_Data_Invoke">
      <class ref="TemplateManagerDataInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TemplateManager_Data_InvokeResponse">
      <class ref="TemplateManagerDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Channel_Cfg">
      <class ref="LONChannelCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_NetworkInterface_Cfg">
      <class ref="LONDeviceNetworkInterfaceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_RNI_Cfg">
      <class ref="LONDeviceRNICfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_Router_Cfg">
      <class ref="LONDeviceRouterCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Fb_Cfg">
      <class ref="LONFbCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Dp_Cfg">
      <class ref="LONDpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Cp_File_Cfg">
      <class ref="LONCpFileCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Cp_Dp_Cfg">
      <class ref="LONCpDpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_DeviceCommand_Invoke">
      <class ref="LONNetworkDeviceCommandInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_Command_Invoke">
      <class ref="LONNetworkCommandInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_Command_Invoke">
      <class ref="LONDeviceCommandInvoke"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_StatusData_InvokeResponse">
      <class ref="LONDeviceStatusDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_PowerlineData_InvokeResponse">
      <class ref="LONDevicePowerlineDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_DataFrequencyInfo">
      <class ref="LONDeviceDataFrequencyInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_PPNData_InvokeResponse">
      <class ref="LONDevicePPNDataInvokeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_ePPNRouteCost">
      <class ref="LONDeviceEPPNRouteCost"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Virtual_Network_Cfg">
      <class ref="VirtualNetworkCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Virtual_Channel_Cfg">
      <class ref="VirtualChannelCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Virtual_Device_Cfg">
      <class ref="VirtualDeviceCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Virtual_Fb_Cfg">
      <class ref="VirtualFbCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Virtual_Dp_Cfg">
      <class ref="VirtualDpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MOD_Network_Cfg">
      <class ref="MODNetworkCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MOD_Channel_Cfg">
      <class ref="MODChannelCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MOD_Fb_Cfg">
      <class ref="MODFbCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MOD_Dp_Cfg">
      <class ref="MODDpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MBS_Network_Cfg">
      <class ref="MBSNetworkCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MBS_Channel_Cfg">
      <class ref="MBSChannelCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MBS_Fb_Cfg">
      <class ref="MBSFbCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:MBS_Dp_Cfg">
      <class ref="MBSDpCfg"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Fault_eType">
      <typesafeEnumClass ref="FaultEType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Dp_eType">
      <typesafeEnumClass ref="DpEType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DpRef_eDiscriminator">
      <typesafeEnumClass ref="DpRefEDiscriminator"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_eCommand">
      <typesafeEnumClass ref="LONNetworkECommand"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_eCommand">
      <typesafeEnumClass ref="LONDeviceECommand"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Network_eScanCommand">
      <typesafeEnumClass ref="LONNetworkEScanCommand"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LON_Device_IlonNi_eCommand">
      <typesafeEnumClass ref="LONDeviceIlonNiECommand"/>
    </bindings>
  </bindings>
</bindings>

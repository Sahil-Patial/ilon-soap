//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.11.26 at 02:58:11 PM IST 
//


package org.coi.ilon.proxyclasses;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				This is the base class for all further <foo>Dp_Cfg classes
 * 			
 * 
 * <p>Java class for Dp_Cfg_Base complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Dp_Cfg_Base"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/}Item_Cfg"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="UCPTformatDescription" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="UCPTlength" type="{http://www.w3.org/2001/XMLSchema}unsignedShort" minOccurs="0"/&gt;
 *         &lt;element name="UCPTdirection" type="{http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/}E_LonString" minOccurs="0"/&gt;
 *         &lt;element name="UCPTpersist" type="{http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/}E_Flag" minOccurs="0"/&gt;
 *         &lt;element name="UCPTdefOutput" type="{http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/}E_LonString" minOccurs="0"/&gt;
 *         &lt;element name="UCPTunit" type="{http://wsdl.echelon.com/web_services_ns/ilon100/v4.0/message/}E_Unit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Dp_Cfg_Base", propOrder = {
    "ucpTformatDescription",
    "ucpTlength",
    "ucpTdirection",
    "ucpTpersist",
    "ucpTdefOutput",
    "ucpTunit"
})
@XmlSeeAlso({
    DpCfg.class,
    LONCpFileCfg.class,
    LONDpCfg.class,
    VirtualDpCfg.class,
    MODDpCfg.class,
    MBSDpCfg.class
})
public abstract class DpCfgBase
    extends ItemCfg
{

    @XmlElement(name = "UCPTformatDescription", required = true)
    protected String ucpTformatDescription;
    @XmlElement(name = "UCPTlength")
    @XmlSchemaType(name = "unsignedShort")
    protected Integer ucpTlength;
    @XmlElement(name = "UCPTdirection")
    protected ELonString ucpTdirection;
    @XmlElement(name = "UCPTpersist")
    protected Short ucpTpersist;
    @XmlElement(name = "UCPTdefOutput")
    protected ELonString ucpTdefOutput;
    @XmlElement(name = "UCPTunit")
    protected List<EUnit> ucpTunit;

    /**
     * Gets the value of the ucpTformatDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUCPTformatDescription() {
        return ucpTformatDescription;
    }

    /**
     * Sets the value of the ucpTformatDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUCPTformatDescription(String value) {
        this.ucpTformatDescription = value;
    }

    /**
     * Gets the value of the ucpTlength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getUCPTlength() {
        return ucpTlength;
    }

    /**
     * Sets the value of the ucpTlength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setUCPTlength(Integer value) {
        this.ucpTlength = value;
    }

    /**
     * Gets the value of the ucpTdirection property.
     * 
     * @return
     *     possible object is
     *     {@link ELonString }
     *     
     */
    public ELonString getUCPTdirection() {
        return ucpTdirection;
    }

    /**
     * Sets the value of the ucpTdirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link ELonString }
     *     
     */
    public void setUCPTdirection(ELonString value) {
        this.ucpTdirection = value;
    }

    /**
     * Gets the value of the ucpTpersist property.
     * 
     * @return
     *     possible object is
     *     {@link Short }
     *     
     */
    public Short getUCPTpersist() {
        return ucpTpersist;
    }

    /**
     * Sets the value of the ucpTpersist property.
     * 
     * @param value
     *     allowed object is
     *     {@link Short }
     *     
     */
    public void setUCPTpersist(Short value) {
        this.ucpTpersist = value;
    }

    /**
     * Gets the value of the ucpTdefOutput property.
     * 
     * @return
     *     possible object is
     *     {@link ELonString }
     *     
     */
    public ELonString getUCPTdefOutput() {
        return ucpTdefOutput;
    }

    /**
     * Sets the value of the ucpTdefOutput property.
     * 
     * @param value
     *     allowed object is
     *     {@link ELonString }
     *     
     */
    public void setUCPTdefOutput(ELonString value) {
        this.ucpTdefOutput = value;
    }

    /**
     * Gets the value of the ucpTunit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ucpTunit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUCPTunit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EUnit }
     * 
     * 
     */
    public List<EUnit> getUCPTunit() {
        if (ucpTunit == null) {
            ucpTunit = new ArrayList<EUnit>();
        }
        return this.ucpTunit;
    }

}

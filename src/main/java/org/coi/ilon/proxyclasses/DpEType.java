//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.11.26 at 02:58:11 PM IST 
//


package org.coi.ilon.proxyclasses;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Dp_eType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Dp_eType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="_Any"/&gt;
 *     &lt;enumeration value="Input"/&gt;
 *     &lt;enumeration value="Output"/&gt;
 *     &lt;enumeration value="InOut"/&gt;
 *     &lt;enumeration value="Compare"/&gt;
 *     &lt;enumeration value="Alarm"/&gt;
 *     &lt;enumeration value="Alarm2"/&gt;
 *     &lt;enumeration value="AlarmDestEnable"/&gt;
 *     &lt;enumeration value="Elevation"/&gt;
 *     &lt;enumeration value="Azimuth"/&gt;
 *     &lt;enumeration value="Sunrise"/&gt;
 *     &lt;enumeration value="Sunset"/&gt;
 *     &lt;enumeration value="BaseTime"/&gt;
 *     &lt;enumeration value="Source"/&gt;
 *     &lt;enumeration value="Target"/&gt;
 *     &lt;enumeration value="nviEnable"/&gt;
 *     &lt;enumeration value="nvoDropOut"/&gt;
 *     &lt;enumeration value="nvoTimeDate"/&gt;
 *     &lt;enumeration value="nvoSummerTime"/&gt;
 *     &lt;enumeration value="nvoWinterTime"/&gt;
 *     &lt;enumeration value="nviTimeZone"/&gt;
 *     &lt;enumeration value="nciMasterSlave"/&gt;
 *     &lt;enumeration value="nciUpdateRate"/&gt;
 *     &lt;enumeration value="nvoDateEvent"/&gt;
 *     &lt;enumeration value="nviDateResync"/&gt;
 *     &lt;enumeration value="nciInputType"/&gt;
 *     &lt;enumeration value="nciInvert"/&gt;
 *     &lt;enumeration value="nvoSetting"/&gt;
 *     &lt;enumeration value="nviLatchEnable"/&gt;
 *     &lt;enumeration value="nvoAlarmFlag"/&gt;
 *     &lt;enumeration value="nvoLevelAlarm"/&gt;
 *     &lt;enumeration value="nviClear"/&gt;
 *     &lt;enumeration value="nvoValueDif"/&gt;
 *     &lt;enumeration value="nciDeltaTime"/&gt;
 *     &lt;enumeration value="nciEdgeSelect"/&gt;
 *     &lt;enumeration value="nvoValueFb"/&gt;
 *     &lt;enumeration value="nviValue"/&gt;
 *     &lt;enumeration value="nviValueFb"/&gt;
 *     &lt;enumeration value="nvoValue"/&gt;
 *     &lt;enumeration value="nviTrigger"/&gt;
 *     &lt;enumeration value="nciValueSet"/&gt;
 *     &lt;enumeration value="nciCorrFactor"/&gt;
 *     &lt;enumeration value="nviRequest"/&gt;
 *     &lt;enumeration value="nvoStatus"/&gt;
 *     &lt;enumeration value="nviDateEvent"/&gt;
 *     &lt;enumeration value="nviTimeSet"/&gt;
 *     &lt;enumeration value="nvoDateResync"/&gt;
 *     &lt;enumeration value="nvoDeviceAlarm"/&gt;
 *     &lt;enumeration value="nvoIpAddress"/&gt;
 *     &lt;enumeration value="nviFileReq"/&gt;
 *     &lt;enumeration value="nvoFileStat"/&gt;
 *     &lt;enumeration value="nviFilePos"/&gt;
 *     &lt;enumeration value="nvoFileDirectory"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "Dp_eType")
@XmlEnum
public enum DpEType {

    @XmlEnumValue("_Any")
    ANY("_Any"),
    @XmlEnumValue("Input")
    INPUT("Input"),
    @XmlEnumValue("Output")
    OUTPUT("Output"),
    @XmlEnumValue("InOut")
    IN_OUT("InOut"),
    @XmlEnumValue("Compare")
    COMPARE("Compare"),
    @XmlEnumValue("Alarm")
    ALARM("Alarm"),
    @XmlEnumValue("Alarm2")
    ALARM_2("Alarm2"),
    @XmlEnumValue("AlarmDestEnable")
    ALARM_DEST_ENABLE("AlarmDestEnable"),
    @XmlEnumValue("Elevation")
    ELEVATION("Elevation"),
    @XmlEnumValue("Azimuth")
    AZIMUTH("Azimuth"),
    @XmlEnumValue("Sunrise")
    SUNRISE("Sunrise"),
    @XmlEnumValue("Sunset")
    SUNSET("Sunset"),
    @XmlEnumValue("BaseTime")
    BASE_TIME("BaseTime"),
    @XmlEnumValue("Source")
    SOURCE("Source"),
    @XmlEnumValue("Target")
    TARGET("Target"),
    @XmlEnumValue("nviEnable")
    NVI_ENABLE("nviEnable"),
    @XmlEnumValue("nvoDropOut")
    NVO_DROP_OUT("nvoDropOut"),
    @XmlEnumValue("nvoTimeDate")
    NVO_TIME_DATE("nvoTimeDate"),
    @XmlEnumValue("nvoSummerTime")
    NVO_SUMMER_TIME("nvoSummerTime"),
    @XmlEnumValue("nvoWinterTime")
    NVO_WINTER_TIME("nvoWinterTime"),
    @XmlEnumValue("nviTimeZone")
    NVI_TIME_ZONE("nviTimeZone"),
    @XmlEnumValue("nciMasterSlave")
    NCI_MASTER_SLAVE("nciMasterSlave"),
    @XmlEnumValue("nciUpdateRate")
    NCI_UPDATE_RATE("nciUpdateRate"),
    @XmlEnumValue("nvoDateEvent")
    NVO_DATE_EVENT("nvoDateEvent"),
    @XmlEnumValue("nviDateResync")
    NVI_DATE_RESYNC("nviDateResync"),
    @XmlEnumValue("nciInputType")
    NCI_INPUT_TYPE("nciInputType"),
    @XmlEnumValue("nciInvert")
    NCI_INVERT("nciInvert"),
    @XmlEnumValue("nvoSetting")
    NVO_SETTING("nvoSetting"),
    @XmlEnumValue("nviLatchEnable")
    NVI_LATCH_ENABLE("nviLatchEnable"),
    @XmlEnumValue("nvoAlarmFlag")
    NVO_ALARM_FLAG("nvoAlarmFlag"),
    @XmlEnumValue("nvoLevelAlarm")
    NVO_LEVEL_ALARM("nvoLevelAlarm"),
    @XmlEnumValue("nviClear")
    NVI_CLEAR("nviClear"),
    @XmlEnumValue("nvoValueDif")
    NVO_VALUE_DIF("nvoValueDif"),
    @XmlEnumValue("nciDeltaTime")
    NCI_DELTA_TIME("nciDeltaTime"),
    @XmlEnumValue("nciEdgeSelect")
    NCI_EDGE_SELECT("nciEdgeSelect"),
    @XmlEnumValue("nvoValueFb")
    NVO_VALUE_FB("nvoValueFb"),
    @XmlEnumValue("nviValue")
    NVI_VALUE("nviValue"),
    @XmlEnumValue("nviValueFb")
    NVI_VALUE_FB("nviValueFb"),
    @XmlEnumValue("nvoValue")
    NVO_VALUE("nvoValue"),
    @XmlEnumValue("nviTrigger")
    NVI_TRIGGER("nviTrigger"),
    @XmlEnumValue("nciValueSet")
    NCI_VALUE_SET("nciValueSet"),
    @XmlEnumValue("nciCorrFactor")
    NCI_CORR_FACTOR("nciCorrFactor"),
    @XmlEnumValue("nviRequest")
    NVI_REQUEST("nviRequest"),
    @XmlEnumValue("nvoStatus")
    NVO_STATUS("nvoStatus"),
    @XmlEnumValue("nviDateEvent")
    NVI_DATE_EVENT("nviDateEvent"),
    @XmlEnumValue("nviTimeSet")
    NVI_TIME_SET("nviTimeSet"),
    @XmlEnumValue("nvoDateResync")
    NVO_DATE_RESYNC("nvoDateResync"),
    @XmlEnumValue("nvoDeviceAlarm")
    NVO_DEVICE_ALARM("nvoDeviceAlarm"),
    @XmlEnumValue("nvoIpAddress")
    NVO_IP_ADDRESS("nvoIpAddress"),
    @XmlEnumValue("nviFileReq")
    NVI_FILE_REQ("nviFileReq"),
    @XmlEnumValue("nvoFileStat")
    NVO_FILE_STAT("nvoFileStat"),
    @XmlEnumValue("nviFilePos")
    NVI_FILE_POS("nviFilePos"),
    @XmlEnumValue("nvoFileDirectory")
    NVO_FILE_DIRECTORY("nvoFileDirectory");
    private final String value;

    DpEType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DpEType fromValue(String v) {
        for (DpEType c: DpEType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.11.26 at 02:58:11 PM IST 
//


package org.coi.ilon.proxyclasses;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LON_Network_eCommand.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LON_Network_eCommand"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Syncronize"/&gt;
 *     &lt;enumeration value="ListLnsNetworkInterfaces"/&gt;
 *     &lt;enumeration value="PPNon"/&gt;
 *     &lt;enumeration value="PPNoff"/&gt;
 *     &lt;enumeration value="PPNSetBlacklist"/&gt;
 *     &lt;enumeration value="PPNGetBlacklist"/&gt;
 *     &lt;enumeration value="PPNAddToBlacklist"/&gt;
 *     &lt;enumeration value="PPNRemoveFromBlacklist"/&gt;
 *     &lt;enumeration value="PPNSupported"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LON_Network_eCommand")
@XmlEnum
public enum LONNetworkECommand {

    @XmlEnumValue("Syncronize")
    SYNCRONIZE("Syncronize"),
    @XmlEnumValue("ListLnsNetworkInterfaces")
    LIST_LNS_NETWORK_INTERFACES("ListLnsNetworkInterfaces"),
    @XmlEnumValue("PPNon")
    PP_NON("PPNon"),
    @XmlEnumValue("PPNoff")
    PP_NOFF("PPNoff"),
    @XmlEnumValue("PPNSetBlacklist")
    PPN_SET_BLACKLIST("PPNSetBlacklist"),
    @XmlEnumValue("PPNGetBlacklist")
    PPN_GET_BLACKLIST("PPNGetBlacklist"),
    @XmlEnumValue("PPNAddToBlacklist")
    PPN_ADD_TO_BLACKLIST("PPNAddToBlacklist"),
    @XmlEnumValue("PPNRemoveFromBlacklist")
    PPN_REMOVE_FROM_BLACKLIST("PPNRemoveFromBlacklist"),
    @XmlEnumValue("PPNSupported")
    PPN_SUPPORTED("PPNSupported");
    private final String value;

    LONNetworkECommand(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LONNetworkECommand fromValue(String v) {
        for (LONNetworkECommand c: LONNetworkECommand.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
